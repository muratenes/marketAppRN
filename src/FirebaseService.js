import PushNotification from "react-native-push-notification";
import NavigationService from "./NavigationService";
import {DeviceEventEmitter, PushNotificationIOS} from "react-native";
import PushNotificationAndroid from "react-native-push-notification";
import firebase from "react-native-firebase";
import AuthStore from "./store/AuthStore";


function firebaseInitalize() {
    PushNotification.configure({
        onRegister: function (token) {
            //console.log('TOKEN:', token);
            //AuthStore.saveFirebaseToken(token)
        },

        onNotification: function (notification) {
            console.log(notification);
            NavigationService.navigate('StoreOrderList');
            notification.finish(PushNotificationIOS.FetchResult.NoData);
        },
        senderID: "651182115407",
        permissions: {alert: true, badge: true, sound: true},
        popInitialNotification: true,
        requestPermissions: true,
    });

    (function () {
        // Register all the valid actions for notifications here and add the action handler for each action
        PushNotificationAndroid.registerNotificationActions(['Onayla', 'Reject', 'Yes', 'No']);
        DeviceEventEmitter.addListener('notificationActionReceived', function (action) {
            console.log('Notification action received: ' + action);
            const info = JSON.parse(action.dataJSON);
            console.log(info)
            if (info.action == 'Accept') {
                // Do work pertaining to Accept action here
            } else if (info.action == 'Reject') {
                // Do work pertaining to Reject action here
            }
            // Add all the required actions handlers
        });
    })();
}

function checkFirebasePermissions() {
    const messaging = firebase.messaging();

    messaging.hasPermission()
        .then((enabled) => {
            if (enabled) {
                messaging.getToken()
                    .then(token => {
                        if (AuthStore.firebase_token !== token || AuthStore.firebase_token === null) {
                            AuthStore.saveFirebaseToken(token)
                        }
                    })
                    .catch(error => { /* handle error */
                    });
            } else {
                messaging.requestPermission()
                    .then(() => { /* got permission */
                    })
                    .catch(error => { /* handle error */
                    });
            }
        })
        .catch(error => { /* handle error */
        });
}

function sendTestLocalNotification() {
    PushNotification.localNotification({
        /* Android Only Properties */
        id: "0", // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
        ticker: "My Notification Ticker", // (optional)
        autoCancel: true, // (optional) default: true
        largeIcon: "ic_launcher", // (optional) default: "ic_launcher"
        smallIcon: "ic_notification", // (optional) default: "ic_notification" with fallback for "ic_launcher"
        bigText: "Mevlana Mahallesi Kuşkonmaz sokak no 19 daire 6 | 3 Adet Süt 30 Yumurta | 14:02 | Toplam tutar ", // (optional) default: "message" prop
        subText: "200 ₺ | Kemal Osman", // (optional) default: none
        color: "red", // (optional) default: system default
        vibrate: true, // (optional) default: true
        vibration: 300, // vibration length in milliseconds, ignored if vibrate=false, default: 1000
        tag: "some_tag", // (optional) add tag to message
        group: "group", // (optional) add group to message
        ongoing: false, // (optional) set whether this is an "ongoing" notification
        priority: "high", // (optional) set notification priority, default: high
        visibility: "public", // (optional) set notification visibility, default: private
        importance: "high", // (optional) set notification importance, default: high
        allowWhileIdle: false, // (optional) set notification to work while on doze, default: false
        ignoreInForeground: false, // (optional) if true, the notification will not be visible when the app is in the foreground (useful for parity with how iOS notifications appear)

        /* iOS only properties */
        alertAction: "view", // (optional) default: view
        category: "", // (optional) default: empty string
        userInfo: {}, // (optional) default: {} (using null throws a JSON value '<null>' error)

        /* iOS and Android properties */
        title: "Yeni Siparişin Var", // (optional)
        message: "Mevlana Mahallesi Kuşkonmaz sokak no 19 daire 6 | 3 Adet Süt 30 Yumurta", // (required)
        playSound: true, // (optional) default: true
        soundName: "default", // (optional) Sound to play when the notification is shown. Value of 'default' plays the default sound. It can be set to a custom sound such as 'android.resource://com.xyz/raw/my_sound'. It will look for the 'my_sound' audio file in 'res/raw' directory and play it. default: 'default' (default sound is played)
        number: 10, // (optional) Valid 32 bit integer specified as string. default: none (Cannot be zero)
        repeatType: "day", // (optional) Repeating interval. Check 'Repeating Notifications' section for more info.
        actions: '["onayla","iptal"]', // (Android only ) See the doc for notification actions to know more
    });
}

export default {
    sendTestLocalNotification,
    firebaseInitalize,
    checkFirebasePermissions
}
